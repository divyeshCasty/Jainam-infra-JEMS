{"version":3,"file":"js/5311.f2f17237.js","mappings":"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","sources":["webpack://aw-webui/./node_modules/color-name/index.js","webpack://aw-webui/./node_modules/color-string/index.js","webpack://aw-webui/./node_modules/color/index.js","webpack://aw-webui/./node_modules/color/node_modules/color-convert/conversions.js","webpack://aw-webui/./node_modules/color/node_modules/color-convert/index.js","webpack://aw-webui/./node_modules/color/node_modules/color-convert/route.js","webpack://aw-webui/./node_modules/color/node_modules/color-name/index.js","webpack://aw-webui/./node_modules/lodash/last.js","webpack://aw-webui/./node_modules/simple-swizzle/index.js","webpack://aw-webui/./node_modules/simple-swizzle/node_modules/is-arrayish/index.js","webpack://aw-webui/./src/util/color.ts"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","/* MIT license */\nvar colorNames = require('color-name');\nvar swizzle = require('simple-swizzle');\nvar hasOwnProperty = Object.hasOwnProperty;\n\nvar reverseNames = Object.create(null);\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (hasOwnProperty.call(colorNames, name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {},\n\tget: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar keyword = /^(\\w+)$/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\tif (!hasOwnProperty.call(colorNames, match[1])) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*(?:[,|\\/]\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = Math.round(num).toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n","const colorString = require('color-string');\nconst convert = require('color-convert');\n\nconst skippedModels = [\n\t// To be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// Gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// Shouldn't really be in color-convert either...\n\t'hex',\n];\n\nconst hashedModelKeys = {};\nfor (const model of Object.keys(convert)) {\n\thashedModelKeys[[...convert[model].labels].sort().join('')] = model;\n}\n\nconst limiters = {};\n\nfunction Color(object, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(object, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tlet i;\n\tlet channels;\n\n\tif (object == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (object instanceof Color) {\n\t\tthis.model = object.model;\n\t\tthis.color = [...object.color];\n\t\tthis.valpha = object.valpha;\n\t} else if (typeof object === 'string') {\n\t\tconst result = colorString.get(object);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + object);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (object.length > 0) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tconst newArray = Array.prototype.slice.call(object, 0, channels);\n\t\tthis.color = zeroArray(newArray, channels);\n\t\tthis.valpha = typeof object[channels] === 'number' ? object[channels] : 1;\n\t} else if (typeof object === 'number') {\n\t\t// This is always RGB - can be converted later on.\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(object >> 16) & 0xFF,\n\t\t\t(object >> 8) & 0xFF,\n\t\t\tobject & 0xFF,\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tconst keys = Object.keys(object);\n\t\tif ('alpha' in object) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof object.alpha === 'number' ? object.alpha : 0;\n\t\t}\n\n\t\tconst hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(object));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tconst {labels} = convert[this.model];\n\t\tconst color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(object[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// Perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tconst limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString() {\n\t\treturn this.string();\n\t},\n\n\ttoJSON() {\n\t\treturn this[this.model]();\n\t},\n\n\tstring(places) {\n\t\tlet self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString(places) {\n\t\tconst self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray() {\n\t\treturn this.valpha === 1 ? [...this.color] : [...this.color, this.valpha];\n\t},\n\n\tobject() {\n\t\tconst result = {};\n\t\tconst {channels} = convert[this.model];\n\t\tconst {labels} = convert[this.model];\n\n\t\tfor (let i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray() {\n\t\tconst rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject() {\n\t\tconst rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround(places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color([...this.color.map(roundToPlace(places)), this.valpha], this.model);\n\t},\n\n\talpha(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color([...this.color, Math.max(0, Math.min(1, value))], this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// Rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, value => ((value % 360) + 360) % 360),\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(95.047)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(108.833)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\thexa(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\tconst rgbArray = this.rgb().round().color;\n\n\t\tlet alphaHex = Math.round(this.valpha * 255).toString(16).toUpperCase();\n\t\tif (alphaHex.length === 1) {\n\t\t\talphaHex = '0' + alphaHex;\n\t\t}\n\n\t\treturn colorString.to.hex(rgbArray) + alphaHex;\n\t},\n\n\trgbNumber() {\n\t\tconst rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity() {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tconst rgb = this.rgb().color;\n\n\t\tconst lum = [];\n\t\tfor (const [i, element] of rgb.entries()) {\n\t\t\tconst chan = element / 255;\n\t\t\tlum[i] = (chan <= 0.04045) ? chan / 12.92 : ((chan + 0.055) / 1.055) ** 2.4;\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast(color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tconst lum1 = this.luminosity();\n\t\tconst lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel(color2) {\n\t\t// https://www.w3.org/TR/WCAG/#contrast-enhanced\n\t\tconst contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark() {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tconst rgb = this.rgb().color;\n\t\tconst yiq = (rgb[0] * 2126 + rgb[1] * 7152 + rgb[2] * 722) / 10000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight() {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate() {\n\t\tconst rgb = this.rgb();\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tlighten(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale() {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tconst rgb = this.rgb().color;\n\t\tconst value = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(value, value, value);\n\t},\n\n\tfade(ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer(ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate(degrees) {\n\t\tconst hsl = this.hsl();\n\t\tlet hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix(mixinColor, weight) {\n\t\t// Ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tif (!mixinColor || !mixinColor.rgb) {\n\t\t\tthrow new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n\t\t}\n\n\t\tconst color1 = mixinColor.rgb();\n\t\tconst color2 = this.rgb();\n\t\tconst p = weight === undefined ? 0.5 : weight;\n\n\t\tconst w = 2 * p - 1;\n\t\tconst a = color1.alpha() - color2.alpha();\n\n\t\tconst w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2;\n\t\tconst w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n};\n\n// Model conversion methods and static constructors\nfor (const model of Object.keys(convert)) {\n\tif (skippedModels.includes(model)) {\n\t\tcontinue;\n\t}\n\n\tconst {channels} = convert[model];\n\n\t// Conversion methods\n\tColor.prototype[model] = function (...args) {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (args.length > 0) {\n\t\t\treturn new Color(args, model);\n\t\t}\n\n\t\treturn new Color([...assertArray(convert[this.model][model].raw(this.color)), this.valpha], model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (...args) {\n\t\tlet color = args[0];\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(args, channels);\n\t\t}\n\n\t\treturn new Color(color, model);\n\t};\n}\n\nfunction roundTo(number, places) {\n\treturn Number(number.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (number) {\n\t\treturn roundTo(number, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tfor (const m of model) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t}\n\n\tmodel = model[0];\n\n\treturn function (value) {\n\t\tlet result;\n\n\t\tif (value !== undefined) {\n\t\t\tif (modifier) {\n\t\t\t\tvalue = modifier(value);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = value;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(value) {\n\treturn Array.isArray(value) ? value : [value];\n}\n\nfunction zeroArray(array, length) {\n\tfor (let i = 0; i < length; i++) {\n\t\tif (typeof array[i] !== 'number') {\n\t\t\tarray[i] = 0;\n\t\t}\n\t}\n\n\treturn array;\n}\n\nmodule.exports = Color;\n","/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","const conversions = require('./conversions');\nconst route = require('./route');\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","const conversions = require('./conversions');\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nmodule.exports = last;\n","'use strict';\n\nvar isArrayish = require('is-arrayish');\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\nvar swizzle = module.exports = function swizzle(args) {\n\tvar results = [];\n\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (isArrayish(arg)) {\n\t\t\t// http://jsperf.com/javascript-array-concat-vs-push/98\n\t\t\tresults = concat.call(results, slice.call(arg));\n\t\t} else {\n\t\t\tresults.push(arg);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nswizzle.wrap = function (fn) {\n\treturn function () {\n\t\treturn fn(swizzle(arguments));\n\t};\n};\n","module.exports = function isArrayish(obj) {\n\tif (!obj || typeof obj === 'string') {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && (obj.splice instanceof Function ||\n\t\t\t(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));\n};\n","import _ from 'lodash';\nimport { matchString, loadClasses } from './classes';\nimport Color from 'color';\nimport * as d3 from 'd3';\n// See here for examples:\n//   https://bl.ocks.org/pstuffa/3393ff2711a53975040077b7453781a9\n//\nconst COLOR_UNCAT = '#CCC';\nconst scale = d3.scaleOrdinal(['#90CAF9', '#FFE082', '#EF9A9A', '#A5D6A7']);\n// Needed to prewarm the color table\nscale.domain('0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20'.split(/, /));\nconst customColors = {\n    afk: '#EEE',\n    'not-afk': '#7F6',\n    hibernating: '#DD6',\n    'google-chrome': '#6AA7FE',\n    chromium: '#8CF',\n    firefox: '#F94',\n    spotify: '#5FA',\n    alacritty: '#FD8',\n    vue: '#5d9',\n    python: '#369',\n    javascript: '#f6b',\n    // Developer domains\n    localhost: '#CCC',\n    'github.com': '#EBF',\n    'stackoverflow.com': Color('#F48024').lighten(0.3),\n    'google.com': '#0AF',\n    'google.se': '#0AF',\n    // Social media sites\n    'messenger.com': Color('#3b5998').lighten(0.5),\n    'facebook.com': Color('#3b5998').lighten(0.5),\n    // Categories\n    uncategorized: COLOR_UNCAT,\n};\nfunction hashcode(str) {\n    let hash = 0;\n    if (str.length === 0) {\n        return hash;\n    }\n    for (let i = 0; i < str.length; i++) {\n        const character = str.charCodeAt(i);\n        hash = (hash << 5) - hash + character;\n        hash = hash & hash; // Convert to 32bit integer\n    }\n    return hash;\n}\nexport function getColorFromString(appname) {\n    appname = appname || '';\n    appname = appname.toLowerCase();\n    return customColors[appname] || scale(Math.abs(hashcode(appname) % 20).toString());\n}\n// TODO: Move into vuex?\nexport function getColorFromCategory(c, allCats) {\n    // Returns the color for a certain category, falling back to parents if none set\n    if (c && c.data && c.data.color) {\n        return c.data.color;\n    }\n    else if (c && c.name.slice(0, -1).length > 0) {\n        // If no color is set on category, traverse parents until one is found\n        const parent = c.name.slice(0, -1);\n        const parentCat = allCats.find(cc => _.isEqual(cc.name, parent));\n        if (parentCat === undefined) {\n            console.error(\"Couldn't find parent!\", parent);\n        }\n        return getColorFromCategory(parentCat, allCats);\n    }\n    else {\n        return COLOR_UNCAT;\n    }\n}\n// TODO: Move into vuex?\nexport function getCategoryColorFromString(str) {\n    // TODO: Don't load classes on every call\n    const allCats = loadClasses();\n    const c = matchString(str, allCats);\n    if (c !== null) {\n        return getColorFromCategory(c, allCats);\n    }\n    else {\n        return fallbackColor(str);\n    }\n}\nfunction fallbackColor(str) {\n    // Get fallback color\n    // TODO: Fetch setting from somewhere better, where defaults are respected\n    const useColorFallback = localStorage !== undefined ? localStorage.useColorFallback === 'true' : true;\n    if (useColorFallback) {\n        return getColorFromString(str);\n    }\n    else {\n        return COLOR_UNCAT;\n    }\n}\nexport function getTitleAttr(bucket, e) {\n    if (bucket.type == 'currentwindow') {\n        return e.data.app;\n    }\n    else if (bucket.type == 'web.tab.current') {\n        const domainRegex = /^.+:\\/\\/(?:www.)?([^/]+)/;\n        const match = e.data.url.match(domainRegex);\n        return match ? match[1] : e.data.url;\n    }\n    else if (bucket.type == 'afkstatus') {\n        return e.data.status;\n    }\n    else if (bucket.type?.startsWith('app.editor')) {\n        return _.last(e.data.file.split('/'));\n    }\n    else if (bucket.type?.startsWith('general.stopwatch')) {\n        return e.data.label;\n    }\n    else {\n        return e.data.title;\n    }\n}\nexport function getCategoryColorFromEvent(bucket, e) {\n    if (bucket.type == 'currentwindow') {\n        // NOTE: this will not work/break category rules which reference `$` or `^`\n        return getCategoryColorFromString(e.data.app + ' ' + e.data.title);\n    }\n    else if (bucket.type == 'web.tab.current') {\n        // NOTE: same as above\n        return getCategoryColorFromString(e.data.title + ' ' + e.data.url);\n    }\n    else if (bucket.type == 'afkstatus') {\n        return getColorFromString(e.data.status);\n    }\n    else if (bucket.type?.startsWith('app.editor')) {\n        return getCategoryColorFromString(e.data.file);\n    }\n    else if (bucket.type?.startsWith('general.stopwatch')) {\n        return getCategoryColorFromString(e.data.label);\n    }\n    else {\n        return getColorFromString(getTitleAttr(bucket, e));\n    }\n}\n"],"names":["module","exports","colorNames","swizzle","hasOwnProperty","Object","reverseNames","create","name","call","cs","to","get","clamp","num","min","max","Math","hexDouble","str","round","toString","toUpperCase","length","string","val","model","prefix","substring","toLowerCase","hsl","hwb","rgb","value","match","i","hexAlpha","abbr","hex","rgba","per","keyword","i2","parseInt","slice","parseFloat","alpha","h","s","l","a","isNaN","w","b","arguments","percent","r","g","hsla","hwba","colorString","convert","skippedModels","hashedModelKeys","keys","labels","sort","join","limiters","Color","object","this","Error","channels","color","valpha","result","newArray","Array","prototype","zeroArray","splice","indexOf","hashedKeys","JSON","stringify","push","limit","freeze","toJSON","places","self","args","percentString","array","unitArray","unitObject","map","roundToPlace","undefined","red","getset","maxfn","green","blue","hue","saturationl","lightness","saturationv","chroma","gray","white","wblack","cyan","magenta","yellow","black","x","y","z","hexa","rgbArray","alphaHex","rgbNumber","luminosity","lum","element","entries","chan","contrast","color2","lum1","lum2","level","contrastRatio","isDark","yiq","isLight","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","grayscale","fade","opaquer","rotate","degrees","mix","mixinColor","weight","color1","p","w1","w2","includes","assertArray","raw","roundTo","number","Number","toFixed","channel","modifier","isArray","m","v","cssKeywords","reverseKeywords","key","hsv","cmyk","xyz","lab","lch","ansi16","ansi256","hcg","apple","defineProperty","comparativeDistance","delta","rdif","gdif","bdif","diff","diffc","c","k","reversed","currentClosestKeyword","currentClosestDistance","Infinity","distance","t2","t3","t1","smin","lmin","sv","hi","floor","f","q","t","vmin","sl","wh","bl","n","y2","x2","z2","hr","atan2","PI","sqrt","cos","sin","saturation","ansi","mult","rem","integer","split","char","pure","mg","conversions","route","models","wrapRaw","fn","wrappedFn","arg0","conversion","wrapRounded","len","forEach","fromModel","routes","routeModels","toModel","buildGraph","graph","parent","deriveBFS","queue","current","pop","adjacents","adjacent","node","unshift","link","from","wrapConversion","path","cur","last","isArrayish","concat","results","arg","wrap","obj","Function","getOwnPropertyDescriptor","constructor","COLOR_UNCAT","scale","d3","domain","customColors","afk","hibernating","chromium","firefox","spotify","alacritty","vue","python","javascript","localhost","uncategorized","hashcode","hash","character","charCodeAt","getColorFromString","appname","abs","getColorFromCategory","allCats","data","parentCat","find","cc","_isEqual","console","error","getCategoryColorFromString","loadClasses","matchString","fallbackColor","useColorFallback","localStorage","getTitleAttr","bucket","e","_bucket$type","_bucket$type2","type","app","domainRegex","url","status","startsWith","_last","file","label","title","getCategoryColorFromEvent","_bucket$type3","_bucket$type4"],"sourceRoot":""}