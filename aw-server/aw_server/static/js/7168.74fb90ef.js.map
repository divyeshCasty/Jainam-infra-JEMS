{"version":3,"file":"js/7168.74fb90ef.js","mappings":"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","sources":["webpack://aw-webui/./node_modules/lodash/_baseHas.js","webpack://aw-webui/./node_modules/lodash/_baseRest.js","webpack://aw-webui/./node_modules/lodash/_baseSum.js","webpack://aw-webui/./node_modules/lodash/_baseZipObject.js","webpack://aw-webui/./node_modules/lodash/fp/_falseOptions.js","webpack://aw-webui/./node_modules/lodash/fp/filter.js","webpack://aw-webui/./node_modules/lodash/fp/flow.js","webpack://aw-webui/./node_modules/lodash/fp/groupBy.js","webpack://aw-webui/./node_modules/lodash/fp/map.js","webpack://aw-webui/./node_modules/lodash/fp/reverse.js","webpack://aw-webui/./node_modules/lodash/fp/sortBy.js","webpack://aw-webui/./node_modules/lodash/fp/values.js","webpack://aw-webui/./node_modules/lodash/has.js","webpack://aw-webui/./node_modules/lodash/reverse.js","webpack://aw-webui/./node_modules/lodash/sortBy.js","webpack://aw-webui/./node_modules/lodash/sumBy.js","webpack://aw-webui/./node_modules/lodash/uniqBy.js","webpack://aw-webui/./node_modules/lodash/zipObject.js","webpack://aw-webui/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://aw-webui/./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack://aw-webui/./src/util/fakedata.js","webpack://aw-webui/./src/stores/activity.ts","webpack://aw-webui/./src/stores/categories.ts"],"sourcesContent":["/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  return object != null && hasOwnProperty.call(object, key);\n}\n\nmodule.exports = baseHas;\n","var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n","/**\n * The base implementation of `_.sum` and `_.sumBy` without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {number} Returns the sum.\n */\nfunction baseSum(array, iteratee) {\n  var result,\n      index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var current = iteratee(array[index]);\n    if (current !== undefined) {\n      result = result === undefined ? current : (result + current);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseSum;\n","/**\n * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n *\n * @private\n * @param {Array} props The property identifiers.\n * @param {Array} values The property values.\n * @param {Function} assignFunc The function to assign values.\n * @returns {Object} Returns the new object.\n */\nfunction baseZipObject(props, values, assignFunc) {\n  var index = -1,\n      length = props.length,\n      valsLength = values.length,\n      result = {};\n\n  while (++index < length) {\n    var value = index < valsLength ? values[index] : undefined;\n    assignFunc(result, props[index], value);\n  }\n  return result;\n}\n\nmodule.exports = baseZipObject;\n","module.exports = {\n  'cap': false,\n  'curry': false,\n  'fixed': false,\n  'immutable': false,\n  'rearg': false\n};\n","var convert = require('./convert'),\n    func = convert('filter', require('../filter'));\n\nfunc.placeholder = require('./placeholder');\nmodule.exports = func;\n","var convert = require('./convert'),\n    func = convert('flow', require('../flow'));\n\nfunc.placeholder = require('./placeholder');\nmodule.exports = func;\n","var convert = require('./convert'),\n    func = convert('groupBy', require('../groupBy'));\n\nfunc.placeholder = require('./placeholder');\nmodule.exports = func;\n","var convert = require('./convert'),\n    func = convert('map', require('../map'));\n\nfunc.placeholder = require('./placeholder');\nmodule.exports = func;\n","var convert = require('./convert'),\n    func = convert('reverse', require('../reverse'));\n\nfunc.placeholder = require('./placeholder');\nmodule.exports = func;\n","var convert = require('./convert'),\n    func = convert('sortBy', require('../sortBy'));\n\nfunc.placeholder = require('./placeholder');\nmodule.exports = func;\n","var convert = require('./convert'),\n    func = convert('values', require('../values'), require('./_falseOptions'));\n\nfunc.placeholder = require('./placeholder');\nmodule.exports = func;\n","var baseHas = require('./_baseHas'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct property of `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = { 'a': { 'b': 2 } };\n * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.has(object, 'a');\n * // => true\n *\n * _.has(object, 'a.b');\n * // => true\n *\n * _.has(object, ['a', 'b']);\n * // => true\n *\n * _.has(other, 'a');\n * // => false\n */\nfunction has(object, path) {\n  return object != null && hasPath(object, path, baseHas);\n}\n\nmodule.exports = has;\n","/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeReverse = arrayProto.reverse;\n\n/**\n * Reverses `array` so that the first element becomes the last, the second\n * element becomes the second to last, and so on.\n *\n * **Note:** This method mutates `array` and is based on\n * [`Array#reverse`](https://mdn.io/Array/reverse).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = [1, 2, 3];\n *\n * _.reverse(array);\n * // => [3, 2, 1]\n *\n * console.log(array);\n * // => [3, 2, 1]\n */\nfunction reverse(array) {\n  return array == null ? array : nativeReverse.call(array);\n}\n\nmodule.exports = reverse;\n","var baseFlatten = require('./_baseFlatten'),\n    baseOrderBy = require('./_baseOrderBy'),\n    baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 30 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\nmodule.exports = sortBy;\n","var baseIteratee = require('./_baseIteratee'),\n    baseSum = require('./_baseSum');\n\n/**\n * This method is like `_.sum` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the value to be summed.\n * The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {number} Returns the sum.\n * @example\n *\n * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n *\n * _.sumBy(objects, function(o) { return o.n; });\n * // => 20\n *\n * // The `_.property` iteratee shorthand.\n * _.sumBy(objects, 'n');\n * // => 20\n */\nfunction sumBy(array, iteratee) {\n  return (array && array.length)\n    ? baseSum(array, baseIteratee(iteratee, 2))\n    : 0;\n}\n\nmodule.exports = sumBy;\n","var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n","var assignValue = require('./_assignValue'),\n    baseZipObject = require('./_baseZipObject');\n\n/**\n * This method is like `_.fromPairs` except that it accepts two arrays,\n * one of property identifiers and one of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 0.4.0\n * @category Array\n * @param {Array} [props=[]] The property identifiers.\n * @param {Array} [values=[]] The property values.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.zipObject(['a', 'b'], [1, 2]);\n * // => { 'a': 1, 'b': 2 }\n */\nfunction zipObject(props, values) {\n  return baseZipObject(props || [], values || [], assignValue);\n}\n\nmodule.exports = zipObject;\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export const window_events = [\n  {\n    duration: 32.1 * 60,\n    data: {\n      app: 'Firefox',\n      title: 'ActivityWatch/activitywatch: Track how you spend your time - Mozilla Firefox',\n      url: 'https://github.com/ActivityWatch/activitywatch',\n      $category: ['Work', 'Programming', 'ActivityWatch'],\n    },\n  },\n  {\n    duration: 14.6 * 60,\n    data: {\n      app: 'Firefox',\n      title: 'Inbox - Gmail - Mozilla Firefox',\n      url: 'https://mail.google.com',\n      $category: ['Comms', 'Email'],\n    },\n  },\n  {\n    duration: 0.2 * 60 * 60,\n    data: {\n      app: 'Firefox',\n      title: 'reddit: the front page of the internet - Mozilla Firefox',\n      url: 'https://reddit.com',\n      $category: ['Media', 'Social Media'],\n    },\n  },\n  {\n    duration: 0.2 * 60 * 60,\n    data: {\n      app: 'Firefox',\n      title: 'YouTube - Mozilla Firefox',\n      url: 'https://youtube.com',\n      $category: ['Media', 'Video'],\n    },\n  },\n  {\n    duration: 0.15 * 60 * 60,\n    data: {\n      app: 'Firefox',\n      title: 'Home / Twitter - Mozilla Firefox',\n      url: 'https://twitter.com',\n      $category: ['Media', 'Social Media'],\n    },\n  },\n  {\n    duration: 0.15 * 60 * 60,\n    data: {\n      app: 'Firefox',\n      title: 'Stack Overflow',\n      url: 'https://stackoverflow.com',\n      $category: ['Work', 'Programming'],\n    },\n  },\n  {\n    duration: 48.2 * 60,\n    data: {\n      app: 'Terminal',\n      title: 'vim ~/code/activitywatch/aw-server/aw-webui/src',\n      $category: ['Work', 'Programming', 'ActivityWatch'],\n    },\n  },\n  {\n    duration: 12.6 * 60,\n    data: {\n      app: 'Terminal',\n      title: 'bash ~/code/activitywatch',\n      $category: ['Work', 'Programming', 'ActivityWatch'],\n    },\n  },\n  {\n    duration: 58.1 * 60,\n    data: {\n      app: 'zoom',\n      title: 'Zoom Meeting',\n      $category: ['Comms', 'Video Conferencing'],\n    },\n  },\n  {\n    duration: 0.4 * 60 * 60,\n    data: { app: 'Minecraft', title: 'Minecraft', $category: ['Media', 'Games'] },\n  },\n  {\n    duration: 3.15 * 60,\n    data: { app: 'Spotify', title: 'Spotify', $category: ['Media', 'Music'] },\n  },\n];\n","import { defineStore } from 'pinia';\nimport moment from 'moment';\nimport * as _ from 'lodash';\nimport { map, filter, values, groupBy, sortBy, flow, reverse } from 'lodash/fp';\nimport { window_events } from '~/util/fakedata';\nimport queries from '~/queries';\nimport { get_day_start_with_offset } from '~/util/time';\nimport { dateToTimeperiod, timeperiodToStr, timeperiodsHoursOfPeriod, timeperiodsDaysOfPeriod, timeperiodsMonthsOfPeriod, timeperiodsAroundTimeperiod, } from '~/util/timeperiod';\nimport { useSettingsStore } from '~/stores/settings';\nimport { useBucketsStore } from '~/stores/buckets';\nimport { useCategoryStore } from '~/stores/categories';\nimport { getClient } from '~/util/awclient';\nfunction timeperiodsStrsHoursOfPeriod(timeperiod) {\n    return timeperiodsHoursOfPeriod(timeperiod).map(timeperiodToStr);\n}\nfunction timeperiodsStrsDaysOfPeriod(timeperiod) {\n    return timeperiodsDaysOfPeriod(timeperiod).map(timeperiodToStr);\n}\nfunction timeperiodsStrsMonthsOfPeriod(timeperiod) {\n    return timeperiodsMonthsOfPeriod(timeperiod).map(timeperiodToStr);\n}\nfunction timeperiodStrsAroundTimeperiod(timeperiod) {\n    return timeperiodsAroundTimeperiod(timeperiod).map(timeperiodToStr);\n}\nfunction colorCategories(events) {\n    // Set $color for categories\n    const categoryStore = useCategoryStore();\n    return events.map((e) => {\n        e.data['$color'] = categoryStore.get_category_color(e.data['$category']);\n        return e;\n    });\n}\nfunction scoreCategories(events) {\n    // Set $score for categories\n    const categoryStore = useCategoryStore();\n    return events.map((e) => {\n        e.data['$score'] = categoryStore.get_category_score(e.data['$category']);\n        return e;\n    });\n}\nexport const useActivityStore = defineStore('activity', {\n    // initial state\n    state: () => ({\n        // set to true once loading has started\n        loaded: false,\n        window: {\n            available: false,\n            top_apps: [],\n            top_titles: [],\n        },\n        browser: {\n            available: false,\n            duration: 0,\n            top_domains: [],\n            top_urls: [],\n        },\n        editor: {\n            available: false,\n            duration: 0,\n            top_files: [],\n            top_languages: [],\n            top_projects: [],\n        },\n        category: {\n            available: false,\n            by_period: [],\n            top: [],\n        },\n        active: {\n            available: false,\n            duration: 0,\n            // non-afk events (no detail data) for the current period\n            events: [],\n            // Aggregated events for current and past periods\n            history: {},\n        },\n        android: {\n            available: false,\n        },\n        stopwatch: {\n            available: false,\n        },\n        query_options: null,\n        buckets: {\n            loaded: false,\n            afk: [],\n            window: [],\n            editor: [],\n            browser: [],\n            android: [],\n            stopwatch: [],\n        },\n    }),\n    getters: {\n        getActiveHistoryAroundTimeperiod() {\n            return (timeperiod) => {\n                const periods = timeperiodStrsAroundTimeperiod(timeperiod);\n                const _history = periods.map(tp => {\n                    if (_.has(this.active.history, tp)) {\n                        return this.active.history[tp];\n                    }\n                    else {\n                        // A zero-duration placeholder until new data has been fetched\n                        return [{ timestamp: moment(tp.split('/')[0]).format(), duration: 0, data: {} }];\n                    }\n                });\n                return _history;\n            };\n        },\n        uncategorizedDuration() {\n            // Returns the uncategorized duration and the total duration\n            if (!this.category.top) {\n                return null;\n            }\n            const uncategorized = this.category.top.filter(e => {\n                return _.isEqual(e.data['$category'], ['Uncategorized']);\n            });\n            const uncategorized_duration = uncategorized.length > 0 ? uncategorized[0].duration : 0;\n            const total_duration = this.category.top.reduce((acc, e) => {\n                return acc + e.duration;\n            }, 0);\n            return [uncategorized_duration, total_duration];\n        },\n    },\n    actions: {\n        async ensure_loaded(query_options) {\n            const settingsStore = useSettingsStore();\n            await settingsStore.ensureLoaded();\n            const bucketsStore = useBucketsStore();\n            console.info('Query options: ', query_options);\n            if (this.loaded) {\n                getClient().abort();\n            }\n            if (!this.loaded || this.query_options !== query_options || query_options.force) {\n                this.start_loading(query_options);\n                if (!query_options.timeperiod) {\n                    query_options.timeperiod = dateToTimeperiod(query_options.date, settingsStore.startOfDay);\n                }\n                await bucketsStore.ensureLoaded();\n                await this.get_buckets(query_options);\n                // TODO: These queries can actually run in parallel, but since server won't process them in parallel anyway we won't.\n                this.set_available();\n                if (this.window.available) {\n                    console.info(settingsStore.useMultidevice ? 'Querying multiple devices' : 'Querying a single device');\n                    if (settingsStore.useMultidevice) {\n                        const hostnames = bucketsStore.hosts.filter(\n                        // require that the host has window buckets,\n                        // and that the host is not a fakedata host,\n                        // unless we're explicitly querying fakedata\n                        host => host &&\n                            bucketsStore.bucketsWindow(host).length > 0 &&\n                            (!host.startsWith('fakedata') || query_options.host.startsWith('fakedata')));\n                        console.info('Including hosts in multiquery: ', hostnames);\n                        await this.query_multidevice_full(query_options, hostnames);\n                    }\n                    else {\n                        await this.query_desktop_full(query_options);\n                    }\n                }\n                else if (this.android.available) {\n                    await this.query_android(query_options);\n                }\n                else {\n                    console.log('Cannot query windows as we are missing either an afk/window bucket pair or an android bucket');\n                    this.query_window_completed();\n                    this.query_category_time_by_period_completed();\n                }\n                if (this.active.available) {\n                    await this.query_active_history(query_options);\n                }\n                else if (this.android.available) {\n                    await this.query_active_history_android(query_options);\n                }\n                else {\n                    console.log('Cannot call query_active_history as we do not have an afk bucket');\n                    await this.query_active_history_completed();\n                }\n                if (this.editor.available) {\n                    await this.query_editor(query_options);\n                }\n                else {\n                    console.log('Cannot call query_editor as we do not have any editor buckets');\n                    await this.query_editor_completed();\n                }\n                // Perform this last, as it takes the longest\n                if (this.window.available || this.android.available) {\n                    await this.query_category_time_by_period(query_options);\n                }\n            }\n            else {\n                console.warn('ensure_loaded called twice with same query_options but without query_options.force = true, skipping...');\n            }\n        },\n        async query_android({ timeperiod, filter_categories }) {\n            const periods = [timeperiodToStr(timeperiod)];\n            const categoryStore = useCategoryStore();\n            const q = queries.appQuery(this.buckets.android[0], categoryStore.classes_for_query, filter_categories);\n            const data = await getClient().query(periods, q).catch(this.errorHandler);\n            this.query_window_completed(data[0]);\n        },\n        async reset() {\n            getClient().abort();\n            this.query_window_completed({});\n            this.query_browser_completed({});\n            this.query_editor_completed({});\n            this.query_category_time_by_period_completed({});\n        },\n        async query_multidevice_full({ timeperiod, filter_categories, filter_afk, always_active_pattern }, hosts) {\n            const periods = [timeperiodToStr(timeperiod)];\n            const categories = useCategoryStore().classes_for_query;\n            const q = queries.multideviceQuery({\n                hosts,\n                filter_afk,\n                categories,\n                filter_categories,\n                host_params: {},\n                always_active_pattern,\n            });\n            const data = await getClient().query(periods, q, { name: 'multidevice', verbose: true });\n            this.query_window_completed(data[0].window);\n        },\n        async query_desktop_full({ timeperiod, filter_categories, filter_afk, include_audible, include_stopwatch, always_active_pattern, }) {\n            const periods = [timeperiodToStr(timeperiod)];\n            const categories = useCategoryStore().classes_for_query;\n            const q = queries.fullDesktopQuery({\n                bid_window: this.buckets.window[0],\n                bid_afk: this.buckets.afk[0],\n                bid_browsers: this.buckets.browser,\n                bid_stopwatch: include_stopwatch && this.buckets.stopwatch.length > 0\n                    ? this.buckets.stopwatch[0]\n                    : undefined,\n                filter_afk,\n                categories,\n                filter_categories,\n                include_audible,\n                always_active_pattern,\n            });\n            const data = await getClient().query(periods, q, {\n                name: 'fullDesktopQuery',\n                verbose: true,\n            });\n            this.query_window_completed(data[0].window);\n            this.query_browser_completed(data[0].browser);\n        },\n        async query_editor({ timeperiod }) {\n            const periods = [timeperiodToStr(timeperiod)];\n            const q = queries.editorActivityQuery(this.buckets.editor);\n            const data = await getClient().query(periods, q, {\n                name: 'editorActivityQuery',\n                verbose: true,\n            });\n            this.query_editor_completed(data[0]);\n        },\n        async query_active_history({ timeperiod, ...query_options }) {\n            const settingsStore = useSettingsStore();\n            const bucketsStore = useBucketsStore();\n            // Filter out periods that are already in the history, and that are in the future\n            const periods = timeperiodStrsAroundTimeperiod(timeperiod).filter(tp_str => {\n                return (!_.includes(this.active.history, tp_str) && new Date(tp_str.split('/')[0]) < new Date());\n            });\n            let afk_buckets = [];\n            if (settingsStore.useMultidevice) {\n                // get all hostnames that qualify for the multidevice query\n                const hostnames = bucketsStore.hosts.filter(\n                // require that the host has afk buckets,\n                // and that the host is not a fakedata host,\n                // unless we're explicitly querying fakedata\n                host => host &&\n                    bucketsStore.bucketsAFK(host).length > 0 &&\n                    (!host.startsWith('fakedata') || query_options.host.startsWith('fakedata')));\n                // get all afk buckets for all hosts\n                afk_buckets = _.flatten(hostnames.map(bucketsStore.bucketsAFK));\n            }\n            else {\n                afk_buckets = [this.buckets.afk[0]];\n            }\n            const query = queries.activityQuery(afk_buckets);\n            const data = await getClient().query(periods, query, {\n                name: 'activityQuery',\n                verbose: true,\n            });\n            const active_history = _.zipObject(periods, _.map(data, pair => _.filter(pair, e => e.data.status == 'not-afk')));\n            this.query_active_history_completed({ active_history });\n        },\n        async query_category_time_by_period({ timeperiod, filter_categories, filter_afk, include_stopwatch, dontQueryInactive, always_active_pattern, }) {\n            // TODO: Needs to be adapted for Android\n            let periods;\n            const count = timeperiod.length[0];\n            const res = timeperiod.length[1];\n            if (res.startsWith('day') && count == 1) {\n                // If timeperiod is a single day, we query the individual hours\n                periods = timeperiodsStrsHoursOfPeriod(timeperiod);\n            }\n            else if (res.startsWith('day') ||\n                (res.startsWith('week') && count == 1) ||\n                (res.startsWith('month') && count == 1)) {\n                // If timeperiod is several days, or a single week/month, we query the individual days\n                periods = timeperiodsStrsDaysOfPeriod(timeperiod);\n            }\n            else if (timeperiod.length[1].startsWith('year') && timeperiod.length[0] == 1) {\n                // If timeperiod a single year, we query the individual months\n                periods = timeperiodsStrsMonthsOfPeriod(timeperiod);\n            }\n            else {\n                console.error(`Unknown timeperiod length: ${timeperiod.length}`);\n            }\n            // Filter out periods that start in the future\n            periods = periods.filter(period => new Date(period.split('/')[0]) < new Date());\n            const signal = getClient().controller.signal;\n            let cancelled = false;\n            signal.onabort = () => {\n                cancelled = true;\n                console.debug('Request aborted');\n            };\n            // Query one period at a time, to avoid timeout on slow queries\n            let data = [];\n            for (const period of periods) {\n                // Not stable\n                //signal.throwIfAborted();\n                if (cancelled) {\n                    throw signal['reason'] || 'unknown reason';\n                }\n                // Only query periods with known data from AFK bucket\n                if (dontQueryInactive && this.active.events.length > 0) {\n                    const start = new Date(period.split('/')[0]);\n                    const end = new Date(period.split('/')[1]);\n                    // Retrieve active time in period\n                    const period_activity = this.active.events.find((e) => {\n                        return start < new Date(e.timestamp) && new Date(e.timestamp) < end;\n                    });\n                    // Check if there was active time\n                    if (!(period_activity && period_activity.duration > 0)) {\n                        data = data.concat([{ cat_events: [] }]);\n                        continue;\n                    }\n                }\n                const isAndroid = this.buckets.android[0] !== undefined;\n                const categories = useCategoryStore().classes_for_query;\n                // TODO: Clean up call, pass QueryParams in fullDesktopQuery as well\n                // TODO: Unify QueryOptions and QueryParams\n                const query = queries.categoryQuery({\n                    bid_browsers: this.buckets.browser,\n                    bid_stopwatch: include_stopwatch && this.buckets.stopwatch.length > 0\n                        ? this.buckets.stopwatch[0]\n                        : undefined,\n                    categories,\n                    filter_categories,\n                    filter_afk,\n                    always_active_pattern,\n                    ...(isAndroid\n                        ? {\n                            bid_android: this.buckets.android[0],\n                        }\n                        : {\n                            bid_afk: this.buckets.afk[0],\n                            bid_window: this.buckets.window[0],\n                        }),\n                });\n                const result = await getClient().query([period], query, {\n                    verbose: true,\n                    name: 'categoryQuery',\n                });\n                data = data.concat(result);\n            }\n            // Zip periods\n            let by_period = _.zipObject(periods, data);\n            // Filter out values that are undefined (no longer needed, only used when visualization was progressive (looks buggy))\n            by_period = _.fromPairs(_.toPairs(by_period).filter(o => o[1]));\n            this.query_category_time_by_period_completed({ by_period });\n        },\n        async query_active_history_android({ timeperiod }) {\n            const periods = timeperiodStrsAroundTimeperiod(timeperiod).filter(tp_str => {\n                return !_.includes(this.active.history, tp_str);\n            });\n            const data = await getClient().query(periods, queries.activityQueryAndroid(this.buckets.android[0]));\n            const active_history = _.zipObject(periods, data);\n            const active_history_events = _.mapValues(active_history, (duration, key) => {\n                return [{ timestamp: key.split('/')[0], duration, data: { status: 'not-afk' } }];\n            });\n            this.query_active_history_completed({ active_history: active_history_events });\n        },\n        set_available() {\n            // TODO: Move to bucketStore on a per-host basis?\n            this.window.available = this.buckets.afk.length > 0 && this.buckets.window.length > 0;\n            this.browser.available =\n                this.buckets.afk.length > 0 &&\n                    this.buckets.window.length > 0 &&\n                    this.buckets.browser.length > 0;\n            this.active.available = this.buckets.afk.length > 0;\n            this.editor.available = this.buckets.editor.length > 0;\n            this.android.available = this.buckets.android.length > 0;\n            this.category.available = this.window.available || this.android.available;\n            this.stopwatch.available = this.buckets.stopwatch.length > 0;\n        },\n        async get_buckets({ host }) {\n            // TODO: Move to bucketStore on a per-host basis?\n            const bucketsStore = useBucketsStore();\n            this.buckets.afk = bucketsStore.bucketsAFK(host);\n            this.buckets.window = bucketsStore.bucketsWindow(host);\n            this.buckets.android = bucketsStore.bucketsAndroid(host);\n            this.buckets.browser = bucketsStore.bucketsBrowser(host);\n            this.buckets.editor = bucketsStore.bucketsEditor(host);\n            this.buckets.stopwatch = bucketsStore.bucketsStopwatch(host);\n            console.log('Available buckets: ', this.buckets);\n            this.buckets.loaded = true;\n        },\n        async load_demo() {\n            // A function to load some demo data (for screenshots and stuff)\n            this.start_loading({});\n            function groupSumEventsBy(events, key, f) {\n                return flow(filter(f), groupBy(f), values, map((es) => {\n                    return { duration: _.sumBy(es, 'duration'), data: { [key]: f(es[0]) } };\n                }), sortBy('duration'), reverse)(events);\n            }\n            const app_events = groupSumEventsBy(window_events, 'app', (e) => e.data.app);\n            const title_events = groupSumEventsBy(window_events, 'title', (e) => e.data.title);\n            const cat_events = groupSumEventsBy(window_events, '$category', (e) => e.data.$category);\n            const url_events = groupSumEventsBy(window_events, 'url', (e) => e.data.url);\n            const domain_events = groupSumEventsBy(window_events, '$domain', (e) => e.data.url === undefined ? '' : new URL(e.data.url).host);\n            this.query_window_completed({\n                duration: _.sumBy(window_events, 'duration'),\n                app_events,\n                title_events,\n                cat_events,\n                active_events: [\n                    {\n                        timestamp: new Date().toISOString(),\n                        duration: 1.5 * 60 * 60,\n                        data: { afk: 'not-afk' },\n                    },\n                ],\n            });\n            this.buckets.browser = ['aw-watcher-firefox'];\n            this.query_browser_completed({\n                duration: _.sumBy(url_events, 'duration'),\n                domains: domain_events,\n                urls: url_events,\n            });\n            this.buckets.editor = ['aw-watcher-vim'];\n            this.query_editor_completed({\n                duration: 30,\n                files: [{ duration: 10, data: { file: 'test.py' } }],\n                languages: [{ duration: 10, data: { language: 'python' } }],\n                projects: [{ duration: 10, data: { project: 'aw-core' } }],\n            });\n            this.buckets.loaded = true;\n            // fetch startOfDay from settings store\n            const settingsStore = useSettingsStore();\n            const startOfDay = settingsStore.startOfDay;\n            function build_active_history() {\n                const active_history = {};\n                let current_day = moment(get_day_start_with_offset(null, startOfDay));\n                _.map(_.range(0, 30), () => {\n                    const current_day_end = moment(current_day).add(1, 'day');\n                    active_history[`${current_day.format()}/${current_day_end.format()}`] = [\n                        {\n                            timestamp: current_day.format(),\n                            duration: 100 + 900 * Math.random(),\n                            data: { status: 'not-afk' },\n                        },\n                    ];\n                    current_day = current_day.add(-1, 'day');\n                });\n                return active_history;\n            }\n            this.query_active_history_completed({ active_history: build_active_history() });\n        },\n        // mutations\n        start_loading(query_options) {\n            this.loaded = true;\n            this.query_options = query_options;\n            // Resets the store state while waiting for new query to finish\n            this.window.top_apps = null;\n            this.window.top_titles = null;\n            this.browser.duration = 0;\n            this.browser.top_domains = null;\n            this.browser.top_urls = null;\n            this.editor.duration = 0;\n            this.editor.top_files = null;\n            this.editor.top_languages = null;\n            this.editor.top_projects = null;\n            this.category.top = null;\n            this.category.by_period = null;\n            this.active.duration = null;\n            // Ensures that active history isn't being fully reloaded on every date change\n            // (see caching done in query_active_history and query_active_history_android)\n            // FIXME: Better detection of when to actually clear (such as on force reload, hostname change)\n            if (Object.keys(this.active.history).length === 0) {\n                this.active.history = {};\n            }\n        },\n        query_window_completed(data = { app_events: [], title_events: [], cat_events: [], active_events: [], duration: 0 }) {\n            // Set $color and $score for categories\n            if (data.cat_events) {\n                data.cat_events = colorCategories(data.cat_events);\n                data.cat_events = scoreCategories(data.cat_events);\n            }\n            this.window.top_apps = data.app_events;\n            this.window.top_titles = data.title_events;\n            this.category.top = data.cat_events;\n            this.active.duration = data.duration;\n            this.active.events = data.active_events;\n        },\n        query_browser_completed(data = { domains: [], urls: [], duration: 0 }) {\n            this.browser.top_domains = data.domains;\n            this.browser.top_urls = data.urls;\n            this.browser.duration = data.duration;\n        },\n        query_editor_completed(data = { duration: 0, files: [], languages: [], projects: [] }) {\n            this.editor.duration = data.duration;\n            this.editor.top_files = data.files;\n            this.editor.top_languages = data.languages;\n            this.editor.top_projects = data.projects;\n        },\n        query_active_history_completed({ active_history } = { active_history: {} }) {\n            this.active.history = {\n                ...this.active.history,\n                ...active_history,\n            };\n        },\n        query_category_time_by_period_completed({ by_period } = { by_period: [] }) {\n            this.category.by_period = by_period;\n        },\n    },\n});\n","import _ from 'lodash';\nimport { saveClasses, loadClasses, cleanCategory, defaultCategories, build_category_hierarchy, createMissingParents, annotate, } from '~/util/classes';\nimport { getColorFromCategory } from '~/util/color';\nimport { defineStore } from 'pinia';\nfunction getScoreFromCategory(c, allCats) {\n    // Returns the score for a certain category, falling back to parents if none set\n    // Very similar to getColorFromCategory\n    if (c && c.data && c.data.score) {\n        return c.data.score;\n    }\n    else if (c && c.name.slice(0, -1).length > 0) {\n        // If no color is set on category, traverse parents until one is found\n        const parent = c.name.slice(0, -1);\n        const parentCat = allCats.find(cc => _.isEqual(cc.name, parent));\n        return getScoreFromCategory(parentCat, allCats);\n    }\n    else {\n        return 0;\n    }\n}\nexport const useCategoryStore = defineStore('categories', {\n    state: () => ({\n        classes: [],\n        classes_unsaved_changes: false,\n    }),\n    // getters\n    getters: {\n        classes_clean() {\n            return this.classes.map(cleanCategory);\n        },\n        classes_hierarchy() {\n            const hier = build_category_hierarchy(_.cloneDeep(this.classes));\n            return _.sortBy(hier, [c => c.id || 0]);\n        },\n        classes_for_query() {\n            return this.classes\n                .filter(c => c.rule.type !== null)\n                .map(c => {\n                return [c.name, c.rule];\n            });\n        },\n        all_categories() {\n            // Returns a list of category names (a list of list of strings)\n            return _.uniqBy(_.flatten(this.classes.map((c) => {\n                const l = [];\n                for (let i = 1; i <= c.name.length; i++) {\n                    l.push(c.name.slice(0, i));\n                }\n                return l;\n            })), (v) => v.join('>>>>') // Can be any separator that doesn't appear in the category names themselves\n            );\n        },\n        allCategoriesSelect() {\n            const categories = this.all_categories;\n            const entries = categories.map(c => {\n                return { text: c.join(' > '), value: c, id: c.id };\n            });\n            return _.sortBy(entries, 'text');\n        },\n        get_category() {\n            return (category_arr) => {\n                if (typeof category_arr === 'string' || category_arr instanceof String)\n                    console.error('Passed category was string, expected array. Lookup will fail.');\n                const match = this.classes.find(c => _.isEqual(c.name, category_arr));\n                if (!match) {\n                    if (!_.isEqual(category_arr, ['Uncategorized']))\n                        console.error(\"Couldn't find category: \", category_arr);\n                    // fallback\n                    return { name: ['Uncategorized'], rule: { type: 'none' } };\n                }\n                return annotate(_.cloneDeep(match));\n            };\n        },\n        get_category_by_id() {\n            return (id) => {\n                return annotate(_.cloneDeep(this.classes.find((c) => c.id == id)));\n            };\n        },\n        get_category_color() {\n            return (cat) => {\n                return getColorFromCategory(this.get_category(cat), this.classes);\n            };\n        },\n        get_category_score() {\n            return (cat) => {\n                return getScoreFromCategory(this.get_category(cat), this.classes);\n            };\n        },\n        category_select() {\n            return (insertMeta) => {\n                // Useful for <select> elements enumerating categories\n                let cats = this.all_categories;\n                cats = cats\n                    .map((c) => {\n                    return { text: c.join(' > '), value: c };\n                })\n                    .sort((a, b) => a.text > b.text);\n                if (insertMeta) {\n                    cats = [\n                        { text: 'All', value: null },\n                        { text: 'Uncategorized', value: ['Uncategorized'] },\n                    ].concat(cats);\n                }\n                return cats;\n            };\n        },\n    },\n    actions: {\n        load(classes = null) {\n            if (classes === null) {\n                classes = loadClasses();\n            }\n            classes = createMissingParents(classes);\n            let i = 0;\n            this.classes = classes.map(c => Object.assign(c, { id: i++ }));\n            this.classes_unsaved_changes = false;\n        },\n        save() {\n            const r = saveClasses(this.classes);\n            this.classes_unsaved_changes = false;\n            return r;\n        },\n        // mutations\n        import(classes) {\n            let i = 0;\n            // overwrite id even if already set\n            this.classes = classes.map(c => Object.assign(c, { id: i++ }));\n            this.classes_unsaved_changes = true;\n        },\n        updateClass(new_class) {\n            console.log('Updating class:', new_class);\n            const old_class = this.classes.find((c) => c.id === new_class.id);\n            const old_name = old_class.name;\n            const parent_depth = old_class.name.length;\n            if (new_class.id === undefined || new_class.id === null) {\n                new_class.id = _.max(_.map(this.classes, 'id')) + 1;\n                this.classes.push(new_class);\n            }\n            else {\n                Object.assign(old_class, new_class);\n            }\n            // When a parent category is renamed, we also need to rename the children\n            _.map(this.classes, c => {\n                if (_.isEqual(old_name, c.name.slice(0, parent_depth))) {\n                    c.name = new_class.name.concat(c.name.slice(parent_depth));\n                    console.log('Renamed child:', c.name);\n                }\n            });\n            this.classes_unsaved_changes = true;\n        },\n        addClass(new_class) {\n            new_class.id = _.max(_.map(this.classes, 'id')) + 1;\n            this.classes.push(new_class);\n            this.classes_unsaved_changes = true;\n        },\n        removeClass(classId) {\n            this.classes = this.classes.filter((c) => c.id !== classId);\n            this.classes_unsaved_changes = true;\n        },\n        appendClassRule(classId, pattern) {\n            const cat = this.classes.find((c) => c.id === classId);\n            if (cat.rule.type === 'none' || cat.rule.type === null) {\n                cat.rule.type = 'regex';\n                cat.rule.regex = pattern;\n            }\n            else if (cat.rule.type === 'regex') {\n                cat.rule.regex += '|' + pattern;\n            }\n            this.classes_unsaved_changes = true;\n        },\n        restoreDefaultClasses() {\n            let i = 0;\n            this.classes = createMissingParents(defaultCategories).map(c => Object.assign(c, { id: i++ }));\n            this.classes_unsaved_changes = true;\n        },\n        clearAll() {\n            this.classes = [];\n            this.classes_unsaved_changes = true;\n        },\n    },\n});\n"],"names":["objectProto","Object","prototype","hasOwnProperty","baseHas","object","key","call","module","exports","identity","overRest","setToString","baseRest","func","start","baseSum","array","iteratee","result","index","length","current","undefined","baseZipObject","props","values","assignFunc","valsLength","value","convert","placeholder","hasPath","has","path","arrayProto","Array","nativeReverse","reverse","baseFlatten","baseOrderBy","isIterateeCall","sortBy","collection","iteratees","baseIteratee","sumBy","baseUniq","uniqBy","assignValue","zipObject","_objectWithoutPropertiesLoose","source","excluded","i","target","sourceKeys","keys","indexOf","_objectWithoutProperties","objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","window_events","duration","data","app","title","url","$category","timeperiodsStrsHoursOfPeriod","timeperiod","timeperiodsHoursOfPeriod","map","timeperiodToStr","timeperiodsStrsDaysOfPeriod","timeperiodsDaysOfPeriod","timeperiodsStrsMonthsOfPeriod","timeperiodsMonthsOfPeriod","timeperiodStrsAroundTimeperiod","timeperiodsAroundTimeperiod","colorCategories","events","categoryStore","useCategoryStore","e","get_category_color","scoreCategories","get_category_score","useActivityStore","defineStore","state","loaded","window","available","top_apps","top_titles","browser","top_domains","top_urls","editor","top_files","top_languages","top_projects","category","by_period","top","active","history","android","stopwatch","query_options","buckets","afk","getters","getActiveHistoryAroundTimeperiod","_this","periods","_history","tp","_has","timestamp","moment","split","format","uncategorizedDuration","this","uncategorized","filter","_isEqual","uncategorized_duration","total_duration","reduce","acc","actions","ensure_loaded","_this2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","settingsStore","bucketsStore","hostnames","wrap","_context","prev","next","useSettingsStore","ensureLoaded","useBucketsStore","console","info","getClient","abort","force","start_loading","dateToTimeperiod","date","startOfDay","get_buckets","set_available","useMultidevice","hosts","host","bucketsWindow","startsWith","query_multidevice_full","query_desktop_full","query_android","log","query_window_completed","query_category_time_by_period_completed","query_active_history","query_active_history_android","query_active_history_completed","query_editor","query_editor_completed","query_category_time_by_period","warn","stop","_ref","_this3","_callee2","filter_categories","q","_context2","queries","classes_for_query","query","errorHandler","sent","reset","_this4","_callee3","_context3","query_browser_completed","_ref2","_this5","_callee4","filter_afk","always_active_pattern","categories","_context4","host_params","name","verbose","_ref3","_this6","_callee5","include_audible","include_stopwatch","_context5","bid_window","bid_afk","bid_browsers","bid_stopwatch","_ref4","_this7","_callee6","_context6","_ref5","_this8","_callee7","afk_buckets","active_history","_context7","_excluded","tp_str","_includes","Date","bucketsAFK","_flatten","_zipObject","_map","pair","_filter","status","_ref6","_this9","_callee8","dontQueryInactive","count","res","signal","cancelled","_iterator","_step","_loop","_context9","error","concat","period","controller","onabort","debug","_createForOfIteratorHelper","end","period_activity","isAndroid","_context8","find","cat_events","abrupt","_objectSpread","bid_android","s","n","done","delegateYield","t0","t1","f","finish","_fromPairs","_toPairs","o","_ref7","_this10","_callee9","active_history_events","_context10","_mapValues","_ref8","_this11","_callee10","_context11","bucketsAndroid","bucketsBrowser","bucketsEditor","bucketsStopwatch","load_demo","_this12","_callee11","groupSumEventsBy","app_events","title_events","url_events","domain_events","build_active_history","_context12","current_day","get_day_start_with_offset","_range","current_day_end","add","Math","random","_flow","_filter2","_groupBy","_values","_map2","es","_sumBy","_defineProperty","_sortBy","_reverse","URL","active_events","toISOString","domains","urls","files","file","languages","language","projects","project","arguments","_ref9","_ref10","getScoreFromCategory","c","allCats","score","slice","parent","parentCat","cc","classes","classes_unsaved_changes","classes_clean","cleanCategory","classes_hierarchy","hier","build_category_hierarchy","_cloneDeep","id","rule","type","all_categories","_uniqBy","l","push","v","join","allCategoriesSelect","entries","text","get_category","category_arr","String","match","annotate","get_category_by_id","cat","getColorFromCategory","category_select","insertMeta","cats","sort","a","b","load","loadClasses","createMissingParents","assign","save","r","saveClasses","updateClass","new_class","old_class","old_name","parent_depth","_max","addClass","removeClass","classId","appendClassRule","pattern","regex","restoreDefaultClasses","defaultCategories","clearAll"],"sourceRoot":""}